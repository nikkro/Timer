name: Build iOS IPA
on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: '0 0 * * 0' # Auto-rebuild weekly (bypass 7-day AltStore expiry)

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Expo CLI
        run: npm install -g expo-cli

      - name: Install dependencies
        run: npm install

      - name: Prebuild iOS project
        run: expo prebuild --platform ios --no-install

      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Install Pods
        run: |
          cd ios
          pod install --repo-update

      - name: Disable code signing
        run: |
          cd ios
          # Extract the project name from the first .xcodeproj found
          PROJECT_NAME=$(ls -d *.xcodeproj | sed 's/\.xcodeproj//')
          sed -i '' "s/DEVELOPMENT_TEAM = .*;/DEVELOPMENT_TEAM = \"\";/g" "$PROJECT_NAME.xcodeproj/project.pbxproj"
          sed -i '' "s/PROVISIONING_PROFILE_SPECIFIER = .*;/PROVISIONING_PROFILE_SPECIFIER = \"\";/g" "$PROJECT_NAME.xcodeproj/project.pbxproj"

      - name: Install jq (JSON parser)
        run: brew install jq

      - name: Build .app with xcodebuild (no signing)
        run: |
          cd ios
          # Find either the workspace or project file (modify if you have multiple projects)
          WORKSPACE_OR_PROJECT=$(find . -name "*.xcworkspace" -o -name "*.xcodeproj" | head -n 1)
          if [[ "$WORKSPACE_OR_PROJECT" == *.xcworkspace ]]; then
            SCHEME=$(xcodebuild -list -workspace "$WORKSPACE_OR_PROJECT" -json | jq -r '.workspace.schemes[0]')
            BUILD_FLAG="-workspace"
          else
            SCHEME=$(xcodebuild -list -project "$WORKSPACE_OR_PROJECT" -json | jq -r '.project.schemes[0]')
            BUILD_FLAG="-project"
          fi
          
          xcodebuild \
            $BUILD_FLAG "$WORKSPACE_OR_PROJECT" \
            -scheme "$SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            -derivedDataPath build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            OTHER_CFLAGS="-Wno-documentation" \
            GCC_TREAT_WARNINGS_AS_ERRORS=NO \
            clean build

      - name: Package .app into unsigned .ipa
        run: |
          cd ios
          mkdir -p Payload
          cp -r build/Build/Products/Release-iphoneos/*.app Payload/
          zip -qr app.ipa Payload

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: app.ipa
          path: ios/app.ipa
